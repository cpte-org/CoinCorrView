name: Build Executables

on:
  push:
    branches:
      - master

jobs:
  build-x86:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.8]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Set up Xvfb
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y xvfb
        echo "DISPLAY=:99.0" >> $GITHUB_ENV
        Xvfb :99 -screen 0 1024x768x24 &

    - name: Run tests
      timeout-minutes: 1
      run: |
        pytest test.py

    - name: Build Executable
      if: success() || failure()
      run: |
        pyinstaller --onefile --name CoinCorrView main.py
        if ([ "${{ matrix.os }}" == "windows-latest" ]); then
          mv dist/CoinCorrView.exe dist/CoinCorrView-windows.exe
        else
          mv dist/CoinCorrView dist/CoinCorrView-linux
        fi

    - name: Upload Executable as Artifact
      if: success() || failure()
      uses: actions/upload-artifact@v2
      with:
        name: CoinCorrView-${{ matrix.os }}
        path: dist/CoinCorrView*

  build-arm:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Executable for ARM
      run: |
        docker buildx build \
          --platform linux/arm/v7 \
          --load \
          -t coincorrview-arm \
          -f Dockerfile.arm \
          .
